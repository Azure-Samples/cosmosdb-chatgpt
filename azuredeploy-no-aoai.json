{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.22.6.54827",
      "templateHash": "2702760770067258847"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "East US",
      "allowedValues": [
        "Australia East",
        "Brazil South",
        "Canada Central",
        "Canada East",
        "East US",
        "East US 2",
        "France Central",
        "Germany West Central",
        "Japan East",
        "Korea Central",
        "North Central US",
        "Norway East",
        "Poland Central",
        "South Africa North",
        "South Central US",
        "South India",
        "Sweden Central",
        "Switzerland North",
        "UAE North",
        "UK South",
        "West Europe",
        "West US",
        "West US 3"
      ],
      "metadata": {
        "description": "Location where all resources are deployed. Is limited by the regions with Azure OpenAI availability. Defaults to **East US** region."
      }
    },
    "name": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id)]",
      "metadata": {
        "description": "Unique name for the chat application.  The name is required to be unique as it will be used as a prefix for the names of these resources:\r\n- Azure Cosmos DB\r\n- Azure App Service\r\n- Azure OpenAI\r\nThe name defaults to a unique string generated from the resource group identifier.\r\n"
      }
    },
    "openAiAccountName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies an existing Azure OpenAI account name."
      }
    },
    "openAiAccountKey": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies the key for an existing Azure OpenAI account."
      }
    },
    "openAiCompletionsModelName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies the deployed model name for your Azure OpenAI account GPT model."
      }
    },
    "openAiEmbeddingsModelName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies the deployed model name for your Azure OpenAI account Embeddings model."
      }
    },
    "appServiceSku": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "D1",
        "B1"
      ],
      "metadata": {
        "description": "Specifies the SKU for the Azure App Service plan. Defaults to **F1**"
      }
    },
    "appGitRepository": {
      "type": "string",
      "defaultValue": "https://github.com/azure-samples/cosmosdb-chatgpt.git",
      "metadata": {
        "description": "Git repository URL for the chat application. This defaults to the [`azure-samples/cosmosdb-chatgpt`](https://github.com/azure-samples/cosmosdb-chatgpt) repository."
      }
    },
    "appGetRepositoryBranch": {
      "type": "string",
      "defaultValue": "main",
      "metadata": {
        "description": "Git repository branch for the chat application. This defaults to the [**main** branch of the `azure-samples/cosmosdb-chatgpt`](https://github.com/azure-samples/cosmosdb-chatgpt/tree/main) repository."
      }
    }
  },
  "variables": {
    "openAiSettings": {
      "endpoint": "[format('https://{0}.openai.azure.com', parameters('openAiAccountName'))]",
      "key": "[parameters('openAiAccountKey')]",
      "completionsModel": {
        "deployment": {
          "name": "[parameters('openAiCompletionsModelName')]"
        }
      },
      "embeddingsModel": {
        "deployment": {
          "name": "[parameters('openAiEmbeddingsModelName')]"
        }
      }
    },
    "cosmosDbSettings": {
      "account": {
        "name": "[format('cosmos-nosql-{0}', parameters('name'))]"
      },
      "database": {
        "name": "ChatDatabase"
      },
      "chat": {
        "name": "ChatContainer"
      },
      "cache": {
        "name": "CacheContainer"
      }
    },
    "chatSettings": {
      "maxConversationTokens": "100",
      "cacheSimilarityScore": "0.99"
    },
    "appServiceSettings": {
      "plan": {
        "name": "[format('web-plan-{0}', parameters('name'))]"
      },
      "web": {
        "name": "[format('web-{0}', parameters('name'))]",
        "git": {
          "repo": "[parameters('appGitRepository')]",
          "branch": "[parameters('appGetRepositoryBranch')]"
        }
      },
      "sku": "[parameters('appServiceSku')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2023-04-15",
      "name": "[variables('cosmosDbSettings').account.name]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "capabilities": [
          {
            "name": "EnableNoSQLVectorSearch"
          },
          {
            "name": "EnableServerless"
          }
        ],
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "failoverPriority": 0,
            "isZoneRedundant": false,
            "locationName": "[parameters('location')]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2023-04-15",
      "name": "[format('{0}/{1}', variables('cosmosDbSettings').account.name, variables('cosmosDbSettings').database.name)]",
      "properties": {
        "resource": {
          "id": "[variables('cosmosDbSettings').database.name]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbSettings').account.name)]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2023-04-15",
      "name": "[format('{0}/{1}/{2}', variables('cosmosDbSettings').account.name, variables('cosmosDbSettings').database.name, variables('cosmosDbSettings').chat.name)]",
      "properties": {
        "resource": {
          "id": "[variables('cosmosDbSettings').chat.name]",
          "partitionKey": {
            "paths": [
              "/sessionId"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/sessionId/?"
              }
            ],
            "excludedPaths": [
              {
                "path": "/*"
              }
            ]
          }
        },
        "options": {}
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosDbSettings').account.name, variables('cosmosDbSettings').database.name)]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2023-04-15",
      "name": "[format('{0}/{1}/{2}', variables('cosmosDbSettings').account.name, variables('cosmosDbSettings').database.name, variables('cosmosDbSettings').cache.name)]",
      "properties": {
        "resource": {
          "id": "[variables('cosmosDbSettings').cache.name]",
          "partitionKey": {
            "paths": [
              "/id"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/vectors/?"
              }
            ],
            "vectorIndexes": [
              {
                "path": "/vectors",
                "type": "quantizedFlat"
              }
            ]
          },
          "vectorEmbeddingPolicy": {
            "vectorEmbeddings": [
              {
                "path": "/vectors",
                "dataType": "float32",
                "dimensions": 1536,
                "distanceFunction": "cosine"
              }
            ]
          }
        },
        "options": {}
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosDbSettings').account.name, variables('cosmosDbSettings').database.name)]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-09-01",
      "name": "[variables('appServiceSettings').plan.name]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('appServiceSettings').sku]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[variables('appServiceSettings').web.name]",
      "location": "[parameters('location')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServiceSettings').plan.name)]",
        "httpsOnly": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServiceSettings').plan.name)]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', variables('appServiceSettings').web.name, 'web')]",
      "kind": "string",
      "properties": {
        "netFrameworkVersion": "v8.0"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('appServiceSettings').web.name)]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', variables('appServiceSettings').web.name, 'metadata')]",
      "kind": "string",
      "properties": {
        "CURRENT_STACK": "dotnet"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('appServiceSettings').web.name)]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', variables('appServiceSettings').web.name, 'appsettings')]",
      "kind": "string",
      "properties": {
        "COSMOSDB__ENDPOINT": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbSettings').account.name), '2023-04-15').documentEndpoint]",
        "COSMOSDB__KEY": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbSettings').account.name), '2023-04-15').primaryMasterKey]",
        "COSMOSDB__DATABASE": "[variables('cosmosDbSettings').database.name]",
        "COSMOSDB__CHATCONTAINER": "[variables('cosmosDbSettings').chat.name]",
        "COSMOSDB__CACHECONTAINER": "[variables('cosmosDbSettings').cache.name]",
        "OPENAI__ENDPOINT": "[variables('openAiSettings').endpoint]",
        "OPENAI__KEY": "[variables('openAiSettings').key]",
        "OPENAI__COMPLETIONDEPLOYMENTNAME": "[variables('openAiSettings').completionsModel.deployment.name]",
        "OPENAI__EMBEDDINGDEPLOYMENTNAME": "[variables('openAiSettings').embeddingsModel.deployment.name]",
        "CHAT__MAXCONVERSATIONTOKENS": "[variables('chatSettings').maxConversationTokens]",
        "CHAT__CACHESIMILARITYSCORE": "[variables('chatSettings').cacheSimilarityScore]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('appServiceSettings').web.name)]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbSettings').account.name)]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosDbSettings').account.name, variables('cosmosDbSettings').database.name)]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers', variables('cosmosDbSettings').account.name, variables('cosmosDbSettings').database.name, variables('cosmosDbSettings').chat.name)]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers', variables('cosmosDbSettings').account.name, variables('cosmosDbSettings').database.name, variables('cosmosDbSettings').cache.name)]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/sourcecontrols",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}/{1}', variables('appServiceSettings').web.name, 'web')]",
      "properties": {
        "repoUrl": "[variables('appServiceSettings').web.git.repo]",
        "branch": "[variables('appServiceSettings').web.git.branch]",
        "isManualIntegration": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('appServiceSettings').web.name)]"
      ]
    }
  ],
  "outputs": {
    "DeployedUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', variables('appServiceSettings').web.name), '2022-09-01').defaultHostName]"
    },
    "CosmosDbEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbSettings').account.name), '2023-04-15').documentEndpoint]"
    },
    "CosmosDbKey": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbSettings').account.name), '2023-04-15').primaryMasterKey]"
    },
    "OpenAiEndpoint": {
      "type": "string",
      "value": "[variables('openAiSettings').endpoint]"
    },
    "OpenAiKey": {
      "type": "string",
      "value": "[variables('openAiSettings').key]"
    }
  }
}